# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-05-23 21:17
from __future__ import unicode_literals

import cases.models
import django.contrib.postgres.fields
import django.contrib.postgres.fields.ranges
from django.db import migrations, models
import django.db.models.deletion
import markupfield.fields
import tagging.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=250)),
                ('authors', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), size=200)),
                ('journal', models.CharField(max_length=250)),
                ('pub_date', models.DateField()),
                ('volume', models.IntegerField()),
                ('issue', models.IntegerField(blank=True, null=True)),
                ('page_range', django.contrib.postgres.fields.ranges.IntegerRangeField()),
                ('url', models.URLField(blank=True, null=True)),
                ('slug', models.SlugField(max_length=250, unique=True)),
                ('tags', tagging.fields.TagField(blank=True, help_text='Separate tags with commas.', max_length=255)),
            ],
            options={
                'ordering': ['pub_date'],
                'verbose_name_plural': 'articles',
            },
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=250, unique=True)),
                ('subtitle', models.CharField(blank=True, max_length=250)),
                ('quick_summary', markupfield.fields.MarkupField(blank=True, help_text='Markdown enabled', rendered_field=True)),
                ('author_profile', markupfield.fields.MarkupField(blank=True, help_text='Markdown enabled', rendered_field=True)),
                ('quick_summary_markup_type', models.CharField(choices=[('', '--'), ('markdown', 'markdown')], default='markdown', editable=False, max_length=30)),
                ('context', markupfield.fields.MarkupField(blank=True, help_text='Markdown enabled', rendered_field=True)),
                ('author_profile_markup_type', models.CharField(choices=[('', '--'), ('markdown', 'markdown')], default='markdown', editable=False, max_length=30)),
                ('_quick_summary_rendered', models.TextField(editable=False)),
                ('question', markupfield.fields.MarkupField(blank=True, help_text='Markdown enabled', rendered_field=True)),
                ('context_markup_type', models.CharField(choices=[('', '--'), ('markdown', 'markdown')], default='markdown', editable=False, max_length=30)),
                ('_author_profile_rendered', models.TextField(editable=False)),
                ('researcher_goals', markupfield.fields.MarkupField(blank=True, help_text='Markdown enabled', rendered_field=True)),
                ('question_markup_type', models.CharField(choices=[('', '--'), ('markdown', 'markdown')], default='markdown', editable=False, max_length=30)),
                ('_context_rendered', models.TextField(editable=False)),
                ('researcher_goals_markup_type', models.CharField(choices=[('', '--'), ('markdown', 'markdown')], default='markdown', editable=False, max_length=30)),
                ('_question_rendered', models.TextField(editable=False)),
                ('approach', markupfield.fields.MarkupField(blank=True, help_text='Markdown enabled', rendered_field=True)),
                ('_researcher_goals_rendered', models.TextField(editable=False)),
                ('approach_markup_type', models.CharField(choices=[('', '--'), ('markdown', 'markdown')], default='markdown', editable=False, max_length=30)),
                ('summary', markupfield.fields.MarkupField(blank=True, help_text='Markdown enabled', rendered_field=True)),
                ('references', markupfield.fields.MarkupField(blank=True, help_text='Markdown enabled', rendered_field=True)),
                ('_approach_rendered', models.TextField(editable=False)),
                ('summary_markup_type', models.CharField(choices=[('', '--'), ('markdown', 'markdown')], default='markdown', editable=False, max_length=30)),
                ('references_markup_type', models.CharField(choices=[('', '--'), ('markdown', 'markdown')], default='markdown', editable=False, max_length=30)),
                ('quote', markupfield.fields.MarkupField(blank=True, help_text='Markdown enabled', rendered_field=True)),
                ('_summary_rendered', models.TextField(editable=False)),
                ('figure', models.ImageField(blank=True, upload_to=cases.models.case_directory_path)),
                ('_references_rendered', models.TextField(editable=False)),
                ('quote_markup_type', models.CharField(choices=[('', '--'), ('markdown', 'markdown')], default='markdown', editable=False, max_length=30)),
                ('figure_legend', markupfield.fields.MarkupField(blank=True, help_text='Markdown enabled', rendered_field=True)),
                ('_quote_rendered', models.TextField(editable=False)),
                ('pdf', models.FileField(blank=True, upload_to=cases.models.case_directory_path)),
                ('figure_legend_markup_type', models.CharField(choices=[('', '--'), ('markdown', 'markdown')], default='markdown', editable=False, max_length=30)),
                ('slug', models.SlugField(max_length=250, unique=True)),
                ('_figure_legend_rendered', models.TextField(editable=False)),
                ('tags', tagging.fields.TagField(blank=True, help_text='Separate tags with commas.', max_length=255)),
                ('article', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cases.Article')),
            ],
            options={
                'ordering': ['created'],
                'verbose_name_plural': 'cases',
            },
        ),
    ]
